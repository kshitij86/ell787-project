[1/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[2/10] Linking C static library esp-idf/main/libmain.a
[3/10] Performing build step for 'bootloader'
[1/1] cd /home/arihant-jammar/Documents/ELL787/Project/ell787-project/build/bootloader/esp-idf/esptool_py && /home/arihant-jammar/.espressif/python_env/idf5.2_py3.11_env/bin/python /home/arihant-jammar/Documents/ELL787/Project/ESP-IDF/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/arihant-jammar/Documents/ELL787/Project/ell787-project/build/bootloader/bootloader.bin
Bootloader binary size 0x68d0 bytes. 0x730 bytes (6%) free.
[4/10] No install step for 'bootloader'
[5/10] Completed 'bootloader'
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable smart_clock.elf
[8/10] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/arihant-jammar/Documents/ELL787/Project/ell787-project/build/smart_clock.bin
[9/10] cd /home/arihant-jammar/Documents/ELL787/Project/ell787-project/build/esp-idf/esptool_py && /home/arihant-jammar/.espressif/python_env/idf5.2_py3.11_env/bin/python /home/arihant-jammar/Documents/ELL787/Project/ESP-IDF/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/arihant-jammar/Documents/ELL787/Project/ell787-project/build/partition_table/partition-table.bin /home/arihant-jammar/Documents/ELL787/Project/ell787-project/build/smart_clock.bin
smart_clock.bin binary size 0x2b0e0 bytes. Smallest app partition is 0x100000 bytes. 0xd4f20 bytes (83%) free.
[9/10] cd /home/arihant-jammar/Documents/ELL787/Project/ESP-IDF/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/arihant-jammar/Documents/ELL787/Project/ESP-IDF/esp-idf -D "SERIAL_TOOL=/home/arihant-jammar/.espressif/python_env/idf5.2_py3.11_env/bin/python;;/home/arihant-jammar/Documents/ELL787/Project/ESP-IDF/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/arihant-jammar/Documents/ELL787/Project/ell787-project/build -P /home/arihant-jammar/Documents/ELL787/Project/ESP-IDF/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyACM0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 smart_clock.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev1
Serial port /dev/ttyACM0
Connecting.......
Chip is ESP32-D0WDQ6-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: d4:d4:da:5a:af:68
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003bfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26832 bytes to 16850...
Writing at 0x00001000... (50 %)
Writing at 0x0000767c... (100 %)
Wrote 26832 bytes (16850 compressed) at 0x00001000 in 0.8 seconds (effective 253.6 kbit/s)...
Hash of data verified.
Compressed 176352 bytes to 97991...
Writing at 0x00010000... (16 %)
Writing at 0x0001c1f5... (33 %)
Writing at 0x00021bcf... (50 %)
Writing at 0x00027333... (66 %)
Writing at 0x0002d557... (83 %)
Writing at 0x000353a4... (100 %)
Wrote 176352 bytes (97991 compressed) at 0x00010000 in 2.8 seconds (effective 502.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 369.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
